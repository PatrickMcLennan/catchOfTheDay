{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","concat","StorePicker","myInput","React","createRef","goToStore","event","history","_this","props","preventDefault","storeName","current","value","push","react_default","a","createElement","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","Order","renderOrder","key","_this$props","fishes","order","removeFromOrder","fish","count","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","react_transition_group","component","name","price","onClick","_this$props2","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","addFish","parseFloat","desc","image","currentTarget","reset","EditFishForm","handleChange","updateFish","index","objectSpread","defineProperty","deleteFish","onChange","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","_callee","authData","storeId","store","regenerator_default","wrap","_context","prev","next","fetch","context","assertThisInitialized","sent","post","data","user","setState","stop","provider","authProvider","auth","signInWithPopup","then","logout","_callee2","_context2","signOut","_this2","onAuthStateChanged","_this$state","loadSampleFishes","components_EditFishForm","components_AddFishForm","components_Login","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","addToOrder","_this$props$details","details","src","alt","disabled","PureComponent","App","Date","now","updatedFish","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","components_Header","components_Fish","components_Order","components_Inventory","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","components_Router","document","querySelector"],"mappings":"wPAAO,SAASA,EAAYC,GAC1B,OAAQA,EAAQ,KAAKC,eAAe,QAAS,CAC3CC,MAAO,WACPC,SAAU,QAIP,SAASC,EAAMC,GACpB,OAAOA,EAAIC,KAAKC,MAAMD,KAAKE,SAAWH,EAAII,SAcrC,SAASC,IACd,IAAMC,EAAa,CACjB,WACA,YACA,QACA,OACA,UACA,QACA,YACA,WACA,OACA,cACA,gBACA,QACA,SACA,YACA,UACA,YACA,QACA,aACA,SACA,WACA,cACA,SACA,SACA,WACA,QACA,UACA,OACA,aACA,UACA,YACA,UACA,YACA,QACA,cACA,UACA,WAoCF,SAAAC,OAAUR,EAAMO,GAAhB,KAAAC,OAA+BR,EAAMO,GAArC,KAAAC,OAAoDR,EAjCtC,CACZ,QACA,MACA,WACA,QACA,OACA,SACA,SACA,OACA,QACA,SACA,SACA,QACA,QACA,QACA,SACA,WACA,WACA,QACA,OACA,QACA,SACA,aACA,WACA,YACA,QACA,SACA,SACA,YACA,WACA,cCtDWS,6MAjCbC,QAAUC,IAAMC,cAMhBC,UAAY,SAACC,GAAU,IACbC,EAAYC,EAAKC,MAAjBF,QAERD,EAAMI,iBAEN,IAAMC,EAAYH,EAAKN,QAAQU,QAAQC,MAEvCN,EAAQO,KAAR,UAAAd,OAAuBW,6EAIvB,OACEI,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iBAAiBC,SAAUC,KAAKf,WAC9CU,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,SACEI,KAAK,OACLC,IAAKF,KAAKlB,QACVqB,UAAQ,EACRC,YAAY,aACZC,aAAc3B,MAEhBiB,EAAAC,EAAAC,cAAA,UAAQI,KAAK,UAAb,8BA5BkBK,qBCmBXC,EApBA,SAAAlB,GAAK,OAClBM,EAAAC,EAAAC,cAAA,UAAQC,UAAU,OAChBH,EAAAC,EAAAC,cAAA,kBAEEF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SACdH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,MAAhB,MACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,OAAhB,QAJJ,OAQAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WACZH,EAAAC,EAAAC,cAAA,YAAOR,EAAMmB,oBC6EJC,6MA/EbC,YAAc,SAACC,GAAQ,IAAAC,EACsBxB,EAAKC,MAAxCwB,EADaD,EACbC,OAAQC,EADKF,EACLE,MAAOC,EADFH,EACEG,gBACjBC,EAAOH,EAAOF,GACdM,EAAQH,EAAMH,GACdO,EAAcF,GAAwB,cAAhBA,EAAKG,OAC3BC,EAAoB,CACxBC,WAAY,QACZV,MACAW,QAAS,CAAEC,MAAO,IAAKC,KAAM,MAG/B,OAAKR,EAEAE,EAcHvB,EAAAC,EAAAC,cAAC4B,EAAA,cAAkBL,EACjBzB,EAAAC,EAAAC,cAAA,MAAIc,IAAKA,GACPhB,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAC4B,EAAA,gBAAD,CAAiBC,UAAU,OAAO5B,UAAU,SAC1CH,EAAAC,EAAAC,cAAC4B,EAAA,cAAD,CACEJ,WAAW,QACXV,IAAKM,EACLK,QAAS,CAAEC,MAAO,IAAKC,KAAM,MAE7B7B,EAAAC,EAAAC,cAAA,YAAOoB,KAPb,MAWG,IACAD,EAAKW,KACL5D,EAAYkD,EAAQD,EAAKY,OAC1BjC,EAAAC,EAAAC,cAAA,UAAQgC,QAAS,kBAAMd,EAAgBJ,KAAvC,WA5BJhB,EAAAC,EAAAC,cAAC4B,EAAA,cAAkBL,EACjBzB,EAAAC,EAAAC,cAAA,MAAIc,IAAKA,GAAT,QAEG,IACAK,EAAOA,EAAKW,KAAO,OACnB,IAJH,2BALY,8EAyCX,IAAAG,EACmB9B,KAAKX,MAAvByB,EADDgB,EACChB,MAAOD,EADRiB,EACQjB,OACTkB,EAAWC,OAAOC,KAAKnB,GACvBoB,EAAQH,EAASI,OAAO,SAACC,EAAWzB,GACxC,IAAMK,EAAOH,EAAOF,GACdM,EAAQH,EAAMH,GAEpB,OADoBK,GAAwB,cAAhBA,EAAKG,OAExBiB,EAAYnB,EAAQD,EAAKY,MAE3BQ,GACN,GACH,OACEzC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAC4B,EAAA,gBAAD,CAAiBC,UAAU,KAAK5B,UAAU,SACvCiC,EAASM,IAAIrC,KAAKU,cAErBf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAf,SAEEH,EAAAC,EAAAC,cAAA,cAAS9B,EAAYmE,aA/EX5B,+DCyDLgC,6MA1DbC,QAAUxD,IAAMC,cAEhBwD,SAAWzD,IAAMC,cAEjByD,UAAY1D,IAAMC,cAElB0D,QAAU3D,IAAMC,cAEhB2D,SAAW5D,IAAMC,cAMjB4D,WAAa,SAAC1D,GAAU,IACd2D,EAAYzD,EAAKC,MAAjBwD,QAER3D,EAAMI,iBAQNuD,EAPa,CACXlB,KAAMvC,EAAKmD,QAAQ/C,QAAQC,MAC3BmC,MAAOkB,WAAW1D,EAAKoD,SAAShD,QAAQC,OACxC0B,OAAQ/B,EAAKqD,UAAUjD,QAAQC,MAC/BsD,KAAM3D,EAAKsD,QAAQlD,QAAQC,MAC3BuD,MAAO5D,EAAKuD,SAASnD,QAAQC,QAI/BP,EAAM+D,cAAcC,iFAIpB,OACEvD,EAAAC,EAAAC,cAAA,QAAMC,UAAU,YAAYC,SAAUC,KAAK4C,YACzCjD,EAAAC,EAAAC,cAAA,SAAO8B,KAAK,OAAOzB,IAAKF,KAAKuC,QAAStC,KAAK,OAAOG,YAAY,SAC9DT,EAAAC,EAAAC,cAAA,SACE8B,KAAK,QACLzB,IAAKF,KAAKwC,SACVvC,KAAK,OACLG,YAAY,UAEdT,EAAAC,EAAAC,cAAA,UAAQ8B,KAAK,SAASzB,IAAKF,KAAKyC,WAC9B9C,EAAAC,EAAAC,cAAA,UAAQJ,MAAM,aAAd,UACAE,EAAAC,EAAAC,cAAA,UAAQJ,MAAM,eAAd,cAGFE,EAAAC,EAAAC,cAAA,YAAU8B,KAAK,OAAOzB,IAAKF,KAAK0C,QAAStC,YAAY,SACrDT,EAAAC,EAAAC,cAAA,SACE8B,KAAK,QACLzB,IAAKF,KAAK2C,SACV1C,KAAK,OACLG,YAAY,UAEdT,EAAAC,EAAAC,cAAA,UAAQI,KAAK,UAAb,sBArDkBK,qBCqEX6C,6MAvDbC,aAAe,SAAClE,GAAU,IAAA0B,EACYxB,EAAKC,MAAjC2B,EADgBJ,EAChBI,MAORqC,EARwBzC,EACVyC,YADUzC,EACE0C,MAGTtB,OAAAuB,EAAA,EAAAvB,CAAA,GACZhB,EADYgB,OAAAwB,EAAA,EAAAxB,CAAA,GAEd9C,EAAM+D,cAActB,KAAOzC,EAAM+D,cAAcxD,kFAK3C,IAAAqC,EAC6B9B,KAAKX,MAAjC2B,EADDc,EACCd,KAAMyC,EADP3B,EACO2B,WAAYH,EADnBxB,EACmBwB,MAC1B,OACE3D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,SACEI,KAAK,OACL0B,KAAK,OACL+B,SAAU1D,KAAKoD,aACf3D,MAAOuB,EAAKW,OAEdhC,EAAAC,EAAAC,cAAA,SACEI,KAAK,OACL0B,KAAK,QACL+B,SAAU1D,KAAKoD,aACf3D,MAAOuB,EAAKY,QAEdjC,EAAAC,EAAAC,cAAA,UACEI,KAAK,OACL0B,KAAK,SACL+B,SAAU1D,KAAKoD,aACf3D,MAAOuB,EAAKG,QAEZxB,EAAAC,EAAAC,cAAA,UAAQJ,MAAM,aAAd,UACAE,EAAAC,EAAAC,cAAA,UAAQJ,MAAM,eAAd,cAEFE,EAAAC,EAAAC,cAAA,YACE8B,KAAK,OACL+B,SAAU1D,KAAKoD,aACf3D,MAAOuB,EAAK+B,OAEdpD,EAAAC,EAAAC,cAAA,SACEI,KAAK,OACL0B,KAAK,QACL+B,SAAU1D,KAAKoD,aACf3D,MAAOuB,EAAKgC,QAEdrD,EAAAC,EAAAC,cAAA,UAAQgC,QAAS,kBAAM4B,EAAWH,KAAlC,uBA7DmBhD,aCaZqD,EAbD,SAAAtE,GAAK,OACjBM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,oDACAF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,SAAS+B,QAAS,kBAAMxC,EAAMuE,aAAa,YAA7D,sBACAjE,EAAAC,EAAAC,cAAA,UAAQC,UAAU,WAAW+B,QAAS,kBAAMxC,EAAMuE,aAAa,cAA/D,2CCLEC,EAAcC,IAASC,cAAc,CACzCC,OAAQ,0CACRC,WAAY,yCACZC,YAAa,kDAOAC,EAJFC,IAAOC,YAAYR,EAAYS,YCsG7BC,6MA7FbC,MAAQ,CACNC,IAAK,KACLC,MAAO,QAWTC,kDAAc,SAAAC,EAAOC,GAAP,IAAAC,EAAAC,EAAA,OAAAC,EAAApF,EAAAqF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACJN,EAAY1F,EAAKC,MAAjByF,QADII,EAAAE,KAAA,EAGQjB,EAAKkB,MAAMP,EAAS,CAAEQ,QAAQtD,OAAAuD,EAAA,EAAAvD,QAAAuD,EAAA,EAAAvD,CAAA5C,MAHtC,WAGN2F,EAHMG,EAAAM,MAKDd,MALC,CAAAQ,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAOJjB,EAAKsB,KAAL,GAAA7G,OAAakG,EAAb,UAA8B,CAClCY,KAAMb,EAASc,KAAKlB,MARZ,OAYZrF,EAAKwG,SAAS,CACZnB,IAAKI,EAASc,KAAKlB,IACnBC,MAAOK,EAAML,OAASG,EAASc,KAAKlB,MAd1B,wBAAAS,EAAAW,SAAAjB,EAAA5E,iEAkBd4D,aAAe,SAACkC,GACd,IAAMC,EAAe,IAAIjC,IAASkC,KAAT,GAAApH,OAAiBkH,EAAjB,kBACzBjC,EACGmC,OACAC,gBAAgBF,GAChBG,KAAK9G,EAAKuF,gBAGfwB,4BAAS,SAAAC,IAAA,OAAApB,EAAApF,EAAAqF,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,cAAAiB,EAAAjB,KAAA,EACDtB,IAASkC,OAAOM,UADf,OAEPlH,EAAKwG,SAAS,CAAEnB,IAAK,OAFd,wBAAA4B,EAAAR,SAAAO,EAAApG,4FAlCW,IAAAuG,EAAAvG,KAClB8D,IAASkC,OAAOQ,mBAAmB,SAACb,GAC9BA,GACFY,EAAK5B,YAAY,CAAEgB,4CAoChB,IAAAc,EACgBzG,KAAKwE,MAApBC,EADDgC,EACChC,IAAKC,EADN+B,EACM/B,MADN9D,EAQHZ,KAAKX,MALPwB,EAHKD,EAGLC,OACAwC,EAJKzC,EAILyC,WACAR,EALKjC,EAKLiC,QACAY,EANK7C,EAML6C,WACAiD,EAPK9F,EAOL8F,iBAEIP,EAASxG,EAAAC,EAAAC,cAAA,UAAQgC,QAAS7B,KAAKmG,QAAtB,WAGf,OAAK1B,EAKDA,IAAQC,EAER/E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,yCACCsG,GAOLxG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,uBACCsG,EACAnE,OAAOC,KAAKpB,GAAQwB,IAAI,SAAA1B,GAAG,OAC1BhB,EAAAC,EAAAC,cAAC8G,EAAD,CACEhG,IAAKA,EACL2C,MAAO3C,EACPK,KAAMH,EAAOF,GACb0C,WAAYA,EACZI,WAAYA,MAGhB9D,EAAAC,EAAAC,cAAC+G,EAAD,CAAa/D,QAASA,IACtBlD,EAAAC,EAAAC,cAAA,UAAQgC,QAAS6E,GAAjB,uBA5BK/G,EAAAC,EAAAC,cAACgH,EAAD,CAAOjD,aAAc5D,KAAK4D,sBAnEftD,aC2ETO,EAlFA,CACbiG,MAAO,CACLnF,KAAM,kBACNqB,MAAO,mBACPD,KACE,wFACFnB,MAAO,KACPT,OAAQ,aAGV4F,MAAO,CACLpF,KAAM,UACNqB,MAAO,sBACPD,KACE,iFACFnB,MAAO,KACPT,OAAQ,aAGV6F,MAAO,CACLrF,KAAM,eACNqB,MAAO,uBACPD,KACE,qGACFnB,MAAO,KACPT,OAAQ,eAGV8F,MAAO,CACLtF,KAAM,YACNqB,MAAO,mBACPD,KACE,kGACFnB,MAAO,KACPT,OAAQ,aAGV+F,MAAO,CACLvF,KAAM,YACNqB,MAAO,mBACPD,KACE,2EACFnB,MAAO,KACPT,OAAQ,aAGVgG,MAAO,CACLxF,KAAM,kBACNqB,MAAO,qBACPD,KACE,0GACFnB,MAAO,KACPT,OAAQ,aAGViG,MAAO,CACLzF,KAAM,UACNqB,MAAO,sBACPD,KAAM,oEACNnB,MAAO,KACPT,OAAQ,aAGVkG,MAAO,CACL1F,KAAM,UACNqB,MAAO,sBACPD,KACE,sFACFnB,MAAO,IACPT,OAAQ,aAGVmG,MAAO,CACL3F,KAAM,eACNqB,MAAO,qBACPD,KACE,8FACFnB,MAAO,KACPT,OAAQ,cCjCGoG,mLA7BJ,IAAA3G,EACuBZ,KAAKX,MAA3BmI,EADD5G,EACC4G,WAAYlE,EADb1C,EACa0C,MADbmE,EAQHzH,KAAKX,MAAMqI,QALb1E,EAHKyE,EAGLzE,MACArB,EAJK8F,EAIL9F,KACAC,EALK6F,EAKL7F,MACAmB,EANK0E,EAML1E,KAGI7B,EAAyB,cATxBuG,EAOLtG,OAGF,OACExB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aACZH,EAAAC,EAAAC,cAAA,OAAK8H,IAAK3E,EAAO4E,IAAKjG,IACtBhC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aACX6B,EACDhC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAS/B,EAAY6D,KAEvCjC,EAAAC,EAAAC,cAAA,SAAIkD,GACJpD,EAAAC,EAAAC,cAAA,UACEgI,UAAW3G,EACXW,QAAS,kBAAM2F,EAAWlE,KAEzBpC,EAAc,eAAiB,qBAnCvB4G,iBC+HJC,6MAzHbvD,MAAQ,CACN3D,OAAQ,GACRC,MAAO,MAkCT+B,QAAU,SAAC7B,GAET,IAAMH,EAAMmB,OAAAuB,EAAA,EAAAvB,CAAA,GAAQ5C,EAAKoF,MAAM3D,QAE/BA,EAAM,OAAAjC,OAAQoJ,KAAKC,QAAWjH,EAE9B5B,EAAKwG,SAAS,CAAE/E,cAGlBwC,WAAa,SAAC1C,EAAKuH,GAEjB,IAAMrH,EAAMmB,OAAAuB,EAAA,EAAAvB,CAAA,GAAQ5C,EAAKoF,MAAM3D,QAE/BA,EAAOF,GAAOuH,EAEd9I,EAAKwG,SAAS,CAAE/E,cAGlB4C,WAAa,SAAC9C,GAEZ,IAAME,EAAMmB,OAAAuB,EAAA,EAAAvB,CAAA,GAAQ5C,EAAKoF,MAAM3D,QAE/BA,EAAOF,GAAO,KAEdvB,EAAKwG,SAAS,CAAE/E,cAGlB6F,iBAAmB,WACjBtH,EAAKwG,SAAS,CAAE/E,OAAQsH,OAG1BX,WAAa,SAAC7G,GAEZ,IAAMG,EAAKkB,OAAAuB,EAAA,EAAAvB,CAAA,GAAQ5C,EAAKoF,MAAM1D,OAE9BA,EAAMH,GAAOG,EAAMH,GAAO,GAAK,EAE/BvB,EAAKwG,SAAS,CAAE9E,aAGlBC,gBAAkB,SAACJ,GAEjB,IAAMG,EAAKkB,OAAAuB,EAAA,EAAAvB,CAAA,GAAQ5C,EAAKoF,MAAM1D,cAEvBA,EAAMH,GAEbvB,EAAKwG,SAAS,CAAE9E,8FAzEE,IACVsH,EAAWpI,KAAKX,MAAMgJ,MAAtBD,OAEFE,EAAkBC,aAAaC,QAAQJ,EAAOtD,SAChDwD,GACFtI,KAAK4F,SAAS,CAAE9E,MAAO2H,KAAKC,MAAMJ,KAGpCtI,KAAKE,IAAMiE,EAAKwE,UAAL,GAAA/J,OAAkBwJ,EAAOtD,QAAzB,WAA2C,CACpDQ,QAAStF,KACTwE,MAAO,wDAIU,IACX6D,EAAUrI,KAAKX,MAAfgJ,MACAvH,EAAUd,KAAKwE,MAAf1D,MACRyH,aAAaK,QACXP,EAAMD,OAAOtD,QACb2D,KAAKI,UAAU/H,mDAKjBqD,EAAK2E,cAAc9I,KAAKE,sCAoDjB,IAAAqG,EAAAvG,KAAAyG,EACmBzG,KAAKwE,MAAvB3D,EADD4F,EACC5F,OAAQC,EADT2F,EACS3F,MACRuH,EAAUrI,KAAKX,MAAfgJ,MACR,OACE1I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAACkJ,EAAD,CAAQvI,QAAQ,yBAChBb,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UACXkC,OAAOC,KAAKpB,GAAQwB,IAAI,SAAA1B,GAAG,OAC1BhB,EAAAC,EAAAC,cAACmJ,EAAD,CACErI,IAAKA,EACL2C,MAAO3C,EACP+G,QAAS7G,EAAOF,GAChB6G,WAAYjB,EAAKiB,iBAKzB7H,EAAAC,EAAAC,cAACoJ,EAAD,CACEpI,OAAQA,EACRC,MAAOA,EACPC,gBAAiBf,KAAKe,kBAExBpB,EAAAC,EAAAC,cAACqJ,EAAD,CACErG,QAAS7C,KAAK6C,QACdQ,WAAYrD,KAAKqD,WACjBI,WAAYzD,KAAKyD,WACjBiD,iBAAkB1G,KAAK0G,iBACvB7F,OAAQA,EACRiE,QAASuD,EAAMD,OAAOtD,kBAnHdxE,aCDH6I,EANE,kBACfxJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,mCCYWuJ,EAVA,kBACbzJ,EAAAC,EAAAC,cAACwJ,EAAA,EAAD,KACE1J,EAAAC,EAAAC,cAACyJ,EAAA,EAAD,KACE3J,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAI/H,UAAW7C,IACjCc,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CAAOE,KAAK,kBAAkB/H,UAAWqG,IACzCpI,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CAAO7H,UAAWyH,OCNxBO,iBAAO/J,EAAAC,EAAAC,cAAC8J,EAAD,MAAYC,SAASC,cAAc","file":"static/js/main.7db1ecf3.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString('en-US', {\n    style: 'currency',\n    currency: 'USD',\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, '-')\n    .replace(/[^\\w-]+/g, '')\n    .replace(/--+/g, '-')\n    .replace(/^-+/, '')\n    .replace(/-+$/, '');\n}\n\nexport function getFunName() {\n  const adjectives = [\n    'adorable',\n    'beautiful',\n    'clean',\n    'drab',\n    'elegant',\n    'fancy',\n    'glamorous',\n    'handsome',\n    'long',\n    'magnificent',\n    'old-fashioned',\n    'plain',\n    'quaint',\n    'sparkling',\n    'ugliest',\n    'unsightly',\n    'angry',\n    'bewildered',\n    'clumsy',\n    'defeated',\n    'embarrassed',\n    'fierce',\n    'grumpy',\n    'helpless',\n    'itchy',\n    'jealous',\n    'lazy',\n    'mysterious',\n    'nervous',\n    'obnoxious',\n    'panicky',\n    'repulsive',\n    'scary',\n    'thoughtless',\n    'uptight',\n    'worried',\n  ];\n\n  const nouns = [\n    'women',\n    'men',\n    'children',\n    'teeth',\n    'feet',\n    'people',\n    'leaves',\n    'mice',\n    'geese',\n    'halves',\n    'knives',\n    'wives',\n    'lives',\n    'elves',\n    'loaves',\n    'potatoes',\n    'tomatoes',\n    'cacti',\n    'foci',\n    'fungi',\n    'nuclei',\n    'syllabuses',\n    'analyses',\n    'diagnoses',\n    'oases',\n    'theses',\n    'crises',\n    'phenomena',\n    'criteria',\n    'data',\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { getFunName } from '../helpers';\n\nclass StorePicker extends Component {\n  myInput = React.createRef();\n\n  static propTypes = {\n    history: PropTypes.object.isRequired,\n  };\n\n  goToStore = (event) => {\n    const { history } = this.props;\n    // 1. Stop the form from submitting\n    event.preventDefault();\n    // 2. get the text from that input\n    const storeName = this.myInput.current.value;\n    // 3. Change the page to /store/whatever-they-entered\n    history.push(`/store/${storeName}`);\n  };\n\n  render() {\n    return (\n      <form className=\"store-selector\" onSubmit={this.goToStore}>\n        <h2>Please Enter A Store</h2>\n        <input\n          type=\"text\"\n          ref={this.myInput}\n          required\n          placeholder=\"Store Name\"\n          defaultValue={getFunName()}\n        />\n        <button type=\"submit\">Visit Store →</button>\n      </form>\n    );\n  }\n}\n\nexport default StorePicker;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = props => (\n  <header className=\"top\">\n    <h1>\n      Catch\n      <span className=\"ofThe\">\n        <span className=\"of\">Of</span>\n        <span className=\"the\">The</span>\n      </span>\n      Day\n    </h1>\n    <h3 className=\"tagline\">\n      <span>{props.tagline}</span>\n    </h3>\n  </header>\n);\n\nHeader.propTypes = {\n  tagline: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport { formatPrice } from '../helpers';\n\nclass Order extends Component {\n  static propTypes = {\n    fishes: PropTypes.object.isRequired,\n    order: PropTypes.object.isRequired,\n    removeFromOrder: PropTypes.func.isRequired,\n  };\n\n  renderOrder = (key) => {\n    const { fishes, order, removeFromOrder } = this.props;\n    const fish = fishes[key];\n    const count = order[key];\n    const isAvailable = fish && fish.status === 'available';\n    const transitionOptions = {\n      classNames: 'order',\n      key,\n      timeout: { enter: 500, exit: 500 },\n    };\n    // Make sure the fish is loaded before we continue!\n    if (!fish) return null;\n\n    if (!isAvailable) {\n      return (\n        <CSSTransition {...transitionOptions}>\n          <li key={key}>\n            Sorry\n            {' '}\n            {fish ? fish.name : 'fish'}\n            {' '}\nis no longer available\n          </li>\n        </CSSTransition>\n      );\n    }\n    return (\n      <CSSTransition {...transitionOptions}>\n        <li key={key}>\n          <span>\n            <TransitionGroup component=\"span\" className=\"count\">\n              <CSSTransition\n                classNames=\"count\"\n                key={count}\n                timeout={{ enter: 500, exit: 500 }}\n              >\n                <span>{count}</span>\n              </CSSTransition>\n            </TransitionGroup>\n            lbs\n            {' '}\n            {fish.name}\n            {formatPrice(count * fish.price)}\n            <button onClick={() => removeFromOrder(key)}>\n              &times;\n            </button>\n          </span>\n        </li>\n      </CSSTransition>\n    );\n  };\n\n  render() {\n    const { order, fishes } = this.props;\n    const orderIds = Object.keys(order);\n    const total = orderIds.reduce((prevTotal, key) => {\n      const fish = fishes[key];\n      const count = order[key];\n      const isAvailable = fish && fish.status === 'available';\n      if (isAvailable) {\n        return prevTotal + count * fish.price;\n      }\n      return prevTotal;\n    }, 0);\n    return (\n      <div className=\"order-wrap\">\n        <h2>Order</h2>\n        <TransitionGroup component=\"ul\" className=\"order\">\n          {orderIds.map(this.renderOrder)}\n        </TransitionGroup>\n        <div className=\"total\">\n          Total:\n          <strong>{formatPrice(total)}</strong>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Order;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddFishForm extends Component {\n  nameRef = React.createRef();\n\n  priceRef = React.createRef();\n\n  statusRef = React.createRef();\n\n  descRef = React.createRef();\n\n  imageRef = React.createRef();\n\n  static propTypes = {\n    addFish: PropTypes.func.isRequired,\n  };\n\n  createFish = (event) => {\n    const { addFish } = this.props;\n    // 1.  stop the form from submitting\n    event.preventDefault();\n    const fish = {\n      name: this.nameRef.current.value,\n      price: parseFloat(this.priceRef.current.value),\n      status: this.statusRef.current.value,\n      desc: this.descRef.current.value,\n      image: this.imageRef.current.value,\n    };\n    addFish(fish);\n    // refresh the form\n    event.currentTarget.reset();\n  };\n\n  render() {\n    return (\n      <form className=\"fish-edit\" onSubmit={this.createFish}>\n        <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\n        <input\n          name=\"price\"\n          ref={this.priceRef}\n          type=\"text\"\n          placeholder=\"Price\"\n        />\n        <select name=\"status\" ref={this.statusRef}>\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n\n        <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\" />\n        <input\n          name=\"image\"\n          ref={this.imageRef}\n          type=\"text\"\n          placeholder=\"Image\"\n        />\n        <button type=\"submit\">+ Add Fish</button>\n      </form>\n    );\n  }\n}\n\nexport default AddFishForm;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass EditFishForm extends Component {\n  static propTypes = {\n    fish: PropTypes.shape({\n      image: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      desc: PropTypes.string.isRequired,\n      status: PropTypes.string.isRequired,\n      price: PropTypes.number.isRequired,\n    }),\n    index: PropTypes.string.isRequired,\n    updateFish: PropTypes.func.isRequired,\n    deleteFish: PropTypes.func.isRequired,\n  };\n\n  handleChange = (event) => {\n    const { fish, updateFish, index } = this.props;\n    // update that fish\n    // 1. Take a copy of the curernt fish\n    const updatedFish = {\n      ...fish,\n      [event.currentTarget.name]: event.currentTarget.value,\n    };\n    updateFish(index, updatedFish);\n  };\n\n  render() {\n    const { fish, deleteFish, index } = this.props;\n    return (\n      <div className=\"fish-edit\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          onChange={this.handleChange}\n          value={fish.name}\n        />\n        <input\n          type=\"text\"\n          name=\"price\"\n          onChange={this.handleChange}\n          value={fish.price}\n        />\n        <select\n          type=\"text\"\n          name=\"status\"\n          onChange={this.handleChange}\n          value={fish.status}\n        >\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n        <textarea\n          name=\"desc\"\n          onChange={this.handleChange}\n          value={fish.desc}\n        />\n        <input\n          type=\"text\"\n          name=\"image\"\n          onChange={this.handleChange}\n          value={fish.image}\n        />\n        <button onClick={() => deleteFish(index)}>\n          Remove Fish\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default EditFishForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Login = props => (\n  <nav className=\"login\">\n    <h2>Inventory Login</h2>\n    <p>Sign In to manage your stores Inventory</p>\n    <button className=\"github\" onClick={() => props.authenticate('Github')}>Log In With Github</button>\n    <button className=\"facebook\" onClick={() => props.authenticate('Facebook')}>Log In With FaceBook</button>\n  </nav>\n);\n\nLogin.propTypes = {\n  authenticate: PropTypes.func.isRequired,\n};\n\nexport default Login;\n","import Rebase from 're-base';\nimport firebase from 'firebase';\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: 'AIzaSyBa4Xm2MkohFGK7_tGvGYwzejxR8CiEJzg',\n  authDomain: 'catch-of-the-day-pat-m.firebaseapp.com',\n  databaseURL: 'https://catch-of-the-day-pat-m.firebaseio.com',\n});\n\nconst base = Rebase.createClass(firebaseApp.database());\n\nexport { firebaseApp };\n\nexport default base;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport firebase from 'firebase';\nimport AddFishForm from './AddFishForm';\nimport EditFishForm from './EditFishForm';\nimport Login from './Login';\nimport base, { firebaseApp } from '../base';\n\nclass Inventory extends Component {\n  static propTypes = {\n    fishes: PropTypes.object.isRequired,\n    updateFish: PropTypes.func.isRequired,\n    deleteFish: PropTypes.func.isRequired,\n    loadSampleFishes: PropTypes.func.isRequired,\n    addFish: PropTypes.func.isRequired,\n    storeId: PropTypes.string.isRequired,\n  };\n\n  state = {\n    uid: null,\n    owner: null,\n  }\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.authHandler({ user });\n      }\n    });\n  }\n\n  authHandler = async (authData) => {\n    const { storeId } = this.props;\n    // 1. Look up the current store in the firebase databse\n    const store = await base.fetch(storeId, { context: this });\n    // 2. claim it if there is no owner\n    if (!store.owner) {\n      // save it as our own\n      await base.post(`${storeId}/owner`, {\n        data: authData.user.uid,\n      });\n    }\n    // 3. Set hte state of the the inventory component to reflect the current user\n    this.setState({\n      uid: authData.user.uid,\n      owner: store.owner || authData.user.uid,\n    });\n  }\n\n  authenticate = (provider) => {\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n    firebaseApp\n      .auth()\n      .signInWithPopup(authProvider)\n      .then(this.authHandler);\n  }\n\n  logout = async () => {\n    await firebase.auth().signOut();\n    this.setState({ uid: null });\n  }\n\n  render() {\n    const { uid, owner } = this.state;\n    const {\n      fishes,\n      updateFish,\n      addFish,\n      deleteFish,\n      loadSampleFishes,\n    } = this.props;\n    const logout = <button onClick={this.logout}>Log Out</button>;\n\n    // 1. Check if they are logged in\n    if (!uid) {\n      return <Login authenticate={this.authenticate} />;\n    }\n    // 2. Check if they are the owner of the store\n\n    if (uid !== owner) {\n      return (\n        <div>\n          <p>Sorry, you are not the owner</p>\n          {logout}\n        </div>\n      );\n    }\n\n    // They must be the owner at this point, so just render out the inventory\n    return (\n      <div className=\"inventory\">\n        <h2>Inventory</h2>\n        {logout}\n        {Object.keys(fishes).map(key => (\n          <EditFishForm\n            key={key}\n            index={key}\n            fish={fishes[key]}\n            updateFish={updateFish}\n            deleteFish={deleteFish}\n          />\n        ))}\n        <AddFishForm addFish={addFish} />\n        <button onClick={loadSampleFishes}>\n          Load Sample Fishes\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Inventory;\n","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: 'Pacific Halibut',\n    image: '/images/hali.jpg',\n    desc:\n      'Everyone’s favorite white fish. We will cut it to the size you need and ship it.',\n    price: 1724,\n    status: 'available',\n  },\n\n  fish2: {\n    name: 'Lobster',\n    image: '/images/lobster.jpg',\n    desc:\n      'These tender, mouth-watering beauties are a fantastic hit at any dinner party.',\n    price: 3200,\n    status: 'available',\n  },\n\n  fish3: {\n    name: 'Sea Scallops',\n    image: '/images/scallops.jpg',\n    desc:\n      'Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound',\n    price: 1684,\n    status: 'unavailable',\n  },\n\n  fish4: {\n    name: 'Mahi Mahi',\n    image: '/images/mahi.jpg',\n    desc:\n      'Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. ',\n    price: 1129,\n    status: 'available',\n  },\n\n  fish5: {\n    name: 'King Crab',\n    image: '/images/crab.jpg',\n    desc:\n      'Crack these open and enjoy them plain or with one of our cocktail sauces',\n    price: 4234,\n    status: 'available',\n  },\n\n  fish6: {\n    name: 'Atlantic Salmon',\n    image: '/images/salmon.jpg',\n    desc:\n      'This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!',\n    price: 1453,\n    status: 'available',\n  },\n\n  fish7: {\n    name: 'Oysters',\n    image: '/images/oysters.jpg',\n    desc: 'A soft plump oyster with a sweet salty flavor and a clean finish.',\n    price: 2543,\n    status: 'available',\n  },\n\n  fish8: {\n    name: 'Mussels',\n    image: '/images/mussels.jpg',\n    desc:\n      'The best mussels from the Pacific Northwest with a full-flavored and complex taste.',\n    price: 425,\n    status: 'available',\n  },\n\n  fish9: {\n    name: 'Jumbo Prawns',\n    image: '/images/prawns.jpg',\n    desc:\n      'With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.',\n    price: 2250,\n    status: 'available',\n  },\n};\n\nexport default fishes;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { formatPrice } from '../helpers';\n\nclass Fish extends PureComponent {\n  static propTypes = {\n    details: PropTypes.shape({\n      image: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      desc: PropTypes.string.isRequired,\n      status: PropTypes.string.isRequired,\n      price: PropTypes.number.isRequired,\n    }),\n    addToOrder: PropTypes.func.isRequired,\n    index: PropTypes.string.isRequired,\n  };\n\n  render() {\n    const { addToOrder, index } = this.props;\n    const {\n      image,\n      name,\n      price,\n      desc,\n      status,\n    } = this.props.details;\n    const isAvailable = status === 'available';\n    return (\n      <li className=\"menu-fish\">\n        <img src={image} alt={name} />\n        <h3 className=\"fish-name\">\n          {name}\n          <span className=\"price\">{formatPrice(price)}</span>\n        </h3>\n        <p>{desc}</p>\n        <button\n          disabled={!isAvailable}\n          onClick={() => addToOrder(index)}\n        >\n          {isAvailable ? 'Add To Order' : 'Sold Out!'}\n        </button>\n      </li>\n    );\n  }\n}\n\nexport default Fish;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Header from './Header';\nimport Order from './Order';\nimport Inventory from './Inventory';\nimport sampleFishes from '../sample-fishes';\nimport Fish from './Fish';\nimport base from '../base';\n\nclass App extends Component {\n  state = {\n    fishes: {},\n    order: {},\n  };\n\n  static propTypes = {\n    match: PropTypes.object.isRequired,\n  };\n\n  componentDidMount() {\n    const { params } = this.props.match;\n    // first reinstate our localStorage\n    const localStorageRef = localStorage.getItem(params.storeId);\n    if (localStorageRef) {\n      this.setState({ order: JSON.parse(localStorageRef) });\n    }\n\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\n      context: this,\n      state: 'fishes',\n    });\n  }\n\n  componentDidUpdate() {\n    const { match } = this.props;\n    const { order } = this.state;\n    localStorage.setItem(\n      match.params.storeId,\n      JSON.stringify(order),\n    );\n  }\n\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  addFish = (fish) => {\n    // 1. Take a copy of the existing state\n    const fishes = { ...this.state.fishes };\n    // 2. Add our new fish to that fishes variable\n    fishes[`fish${Date.now()}`] = fish;\n    // 3. Set the new fishes object to state\n    this.setState({ fishes });\n  };\n\n  updateFish = (key, updatedFish) => {\n    // 1. Take a copy of the current state\n    const fishes = { ...this.state.fishes };\n    // 2. Update that state\n    fishes[key] = updatedFish;\n    // 3. Set that to state\n    this.setState({ fishes });\n  };\n\n  deleteFish = (key) => {\n    // 1. take a copy of state\n    const fishes = { ...this.state.fishes };\n    // 2. update the state\n    fishes[key] = null;\n    // 3.  update state\n    this.setState({ fishes });\n  };\n\n  loadSampleFishes = () => {\n    this.setState({ fishes: sampleFishes });\n  };\n\n  addToOrder = (key) => {\n    // 1. take a copy of state\n    const order = { ...this.state.order };\n    // 2. Either add to the order, or update the number in our order\n    order[key] = order[key] + 1 || 1;\n    // 3. Call setState to update our state object\n    this.setState({ order });\n  };\n\n  removeFromOrder = (key) => {\n    // 1. take a copy of state\n    const order = { ...this.state.order };\n    // 2. remove that itemf from order\n    delete order[key];\n    // 3. Call setState to update our state object\n    this.setState({ order });\n  };\n\n  render() {\n    const { fishes, order } = this.state;\n    const { match } = this.props;\n    return (\n      <div className=\"catch-of-the-day\">\n        <div className=\"menu\">\n          <Header tagline=\"Fresh Seafood Market\" />\n          <ul className=\"fishes\">\n            {Object.keys(fishes).map(key => (\n              <Fish\n                key={key}\n                index={key}\n                details={fishes[key]}\n                addToOrder={this.addToOrder}\n              />\n            ))}\n          </ul>\n        </div>\n        <Order\n          fishes={fishes}\n          order={order}\n          removeFromOrder={this.removeFromOrder}\n        />\n        <Inventory\n          addFish={this.addFish}\n          updateFish={this.updateFish}\n          deleteFish={this.deleteFish}\n          loadSampleFishes={this.loadSampleFishes}\n          fishes={fishes}\n          storeId={match.params.storeId}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\n\nconst NotFound = () => (\n  <div>\n    <h2>Not Found!?!!!!1111</h2>\n  </div>\n);\n\nexport default NotFound;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport StorePicker from './StorePicker';\nimport App from './App';\nimport NotFound from './NotFound';\n\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={StorePicker} />\n      <Route path=\"/store/:storeId\" component={App} />\n      <Route component={NotFound} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Router;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport './css/style.css';\nimport Router from './components/Router';\n\nrender(<Router />, document.querySelector('#main'));\n"],"sourceRoot":""}